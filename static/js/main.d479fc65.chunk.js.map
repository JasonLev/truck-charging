{"version":3,"sources":["components/Dashboard.js","hooks/useMapImage.js","hooks/useLegTimeData.js","components/ChoiceForm.js","components/SwitchForm.js","components/Map.js","components/Confirmation.js","components/Welcome.js","serviceWorker.js","index.js","App.js","images/Material_Icons.png","images/route1.png","images/route2.png","images/route3.png","images/heavy_traffic.png","images/alt_route.png"],"names":["createData","name","start_date","btn","rows","desc","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","Tooltip","IconButton","aria-label","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","button","margin","border","clip","height","overflow","position","top","Dashboard","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","to","src","navIcons","alt","component","gutterBottom","Table","aria-labelledby","size","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","Button","style","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","IMAGES","route2","route1","route3","route4","route5","useMapImage","urlParam","mapImage","setMapImage","useEffect","fetchMapImage","useLegTimes","urlVal","legTimes","setLegTimes","baseUrl","url","axios","get","response","data","fetchlegTimes","formControl","formControlLabel","ChoiceForm","onFormChange","setValue","legData1Payload","legData2Payload","legData3Payload","legData1","legData2","legData3","legData1Arr","legs","time","toFixed","legData2Arr","legData3Arr","FormControl","FormLabel","RadioGroup","Radio","SwitchForm","onSwitchFormChange","overflowY","Map","location","useLocation","startImg","pathname","mapContainer","setUrlParam","isShowingForm","setShowingForm","isShowingSwitchForm","setShowingSwitchForm","isShowingConfirm","setShowingConfirm","isConfirmed","setConfirmed","open","setOpen","mapImg","handleFormChange","selection","handleClose","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Confirmation","Welcome","Boolean","window","hostname","match","ReactDOM","render","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d479fc65.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Button from \"@material-ui/core/Button\";\n\nimport navIcons from \"../images/Material_Icons.png\";\n\nfunction createData(name, start_date, btn) {\n  return { name, start_date, btn };\n}\n\nconst rows = [\n  createData(\"LAXPOR--111819\", \"11.18.19\", \"START\"),\n  createData(\"PORLAX--112219\", \"11.22.19\", ),\n  createData(\"SFOSEA--112819\", \"11.28.19\", ),\n  createData(\"SEASFO--120219\", \"12.02.19\", ),\n  createData(\"SFOLVS--120619\", \"12.06.19\", ),\n  createData(\"LVSLAX--120819\", \"12.08.19\", ),\n];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Trip Name\"\n  },\n  { id: \"date\", numeric: true, disablePadding: false, label: \"Start Date\" },\n  { id: \"action\", numeric: false, disablePadding: true, label: \"Action\" }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          My Jobs\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 250\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Link to=\"/map_traffic\">\n          <img src={navIcons} alt=\"icons\" className=\"navIcons\" />\n        </Link>\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n          Dashboard\n        </Typography>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.start_date}</TableCell>\n                      {row.btn === \"START\" && (\n                        <Link to=\"/map\">\n                          <TableCell align=\"right\">\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              className={classes.button}\n                            >\n                              {row.btn}\n                            </Button>\n                          </TableCell>\n                        </Link>\n                      )}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"previous page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"next page\"\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","import { useState, useEffect } from \"react\";\nimport route1 from '../images/route1.png'\nimport route2 from '../images/route2.png'\nimport route3 from '../images/route3.png'\nimport route4 from '../images/heavy_traffic.png'\nimport route5 from '../images/alt_route.png'\n\nconst IMAGES = [route2, route1, route3, route4, route5]\n\nconst useMapImage = urlParam => {\n  const [mapImage, setMapImage] = useState(\"\");\n\n  useEffect(() => {\n    const fetchMapImage = async urlParam => {\n        setMapImage(IMAGES[urlParam - 1])\n    };\n    fetchMapImage(urlParam);\n  }, [urlParam]);\n  return mapImage;\n};\n\nexport default useMapImage;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useLegTimes = urlVal => {\n  const [legTimes, setLegTimes] = useState(\"\");\n\n  useEffect(() => {\n    const fetchlegTimes = async urlVal => {\n        let url;\n        const baseUrl = `https://cors-anywhere.herokuapp.com/http://34.94.125.194:8000/api/route${urlVal}/data/`;\n        if (urlVal) {\n          url = baseUrl;\n        }\n        try {\n          const response = await axios.get(url);\n          setLegTimes(response.data);\n        } catch (error) {\n          setLegTimes(\"\");\n        }\n    };\n    fetchlegTimes(urlVal);\n  }, [urlVal]);\n  return legTimes;\n};\n\nexport default useLegTimes;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nimport useLegTimes from \"../hooks/useLegTimeData\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1, 0)\n  },\n  formControlLabel: {\n    margin: theme.spacing(3)\n  },\n}));\n\nexport default function ChoiceForm({ onFormChange }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState();\n\n  const legData1Payload = useLegTimes(2);\n  const legData2Payload = useLegTimes(1);\n  const legData3Payload = useLegTimes(3);\n  let legData1 = \"Loading...\"\n  let legData2 = \"Loading...\"\n  let legData3 = \"Loading...\"\n  if (legData1Payload) {\n    const legData1Arr = legData1Payload.legs;\n    legData1 = (\n      <div className=\"optionContainer\">\n        <h2 className=\"optionHeading\">Option A: (Total Trip Time: 19.71 hrs)</h2>\n        <p>Los Angeles 5:00AM</p>\n        <p>San Jose 10:24AM ({(legData1Arr[0].time / 3600).toFixed(2)}hrs)</p>\n        <p>Medford 4:08PM ({(legData1Arr[1].time / 3600).toFixed(2)}hrs)</p>\n        <p>Portland 10:52PM ({(legData1Arr[2].time / 3600).toFixed(2)}hrs)</p>\n      </div>\n    );\n  }\n  if (legData2Payload) {\n    const legData2Arr = legData2Payload.legs;\n    legData2 = (\n      <div className=\"optionContainer\">\n        <h2 className=\"optionHeading\">Option B: (Total Trip Time: 21.80 hrs)</h2>\n        <p>Los Angeles 5:00AM</p>\n        <p>Bakersfield 9:14AM ({(legData2Arr[0].time / 3600).toFixed(2)}hrs)</p>\n        <p>\n          San Francisco 2:08PM ({(legData2Arr[1].time / 3600).toFixed(2)}hrs)\n        </p>\n        <p>Medford 5:04PM ({(legData2Arr[2].time / 3600).toFixed(2)}hrs)</p>\n        <p>Portland 11:21PM ({(legData2Arr[3].time / 3600).toFixed(2)}hrs)</p>\n      </div>\n    );\n  }\n  if (legData3Payload) {\n    const legData3Arr = legData3Payload.legs;\n    legData3 = (\n      <div className=\"optionContainer\">\n        <h2 className=\"optionHeading\">Option C: (Total Trip Time: 20.47 hrs)</h2>\n        <p>Los Angeles 5:00AM</p>\n        <p>San Jose 10:24AM ({(legData3Arr[0].time / 3600).toFixed(2)}hrs)</p>\n        <p>\n          Redding 4:42PM ({(legData3Arr[1].time / 3600).toFixed(2)}hrs)\n        </p>\n        <p>Eugene 10:44PM ({(legData3Arr[2].time / 3600).toFixed(2)}hrs)</p>\n        <p>Portland 1:56AM ({(legData3Arr[3].time / 3600).toFixed(2)}hrs)</p>\n      </div>\n    );\n  }\n  \n  const handleChange = event => {\n    setValue(event.target.value);\n    onFormChange(event.target.value);\n  };\n  return (\n    <div>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Route Options & Recharging Stations</FormLabel>\n        <RadioGroup\n          aria-label=\"routes\"\n          name=\"routes\"\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value=\"1\"\n            control={<Radio />}\n            label={legData1}\n            className={classes.formControl}\n          />\n          <FormControlLabel\n            value=\"2\"\n            control={<Radio />}\n            label={legData2}\n            className={classes.formControl}\n          />\n          <FormControlLabel\n            value=\"3\"\n            control={<Radio />}\n            label={legData3}\n            className={classes.formControl}\n          />\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nimport useLegTimes from \"../hooks/useLegTimeData\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  formControlLabel: {\n    margin: theme.spacing(3)\n  }\n}));\n\nexport default function SwitchForm({ onSwitchFormChange }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState();\n\n  const legData1Payload = useLegTimes(1);\n  const legData2Payload = useLegTimes(2);\n  let legData1 = \"Loading...\";\n  let legData2 = \"Loading...\";\n  if (legData1Payload) {\n    const legData1Arr = legData1Payload.legs;\n    legData1 = (\n      <div className=\"optionContainer\">\n        <h2 className=\"optionHeading heavyTraffic\">\n          Current Route: (Total Trip Time: 19.71 hrs)\n        </h2>\n        <p className=\"strike\">Los Angeles 5:00AM</p>\n        <p>San Jose 10:24AM ({(legData1Arr[0].time / 3600).toFixed(2)}hrs)</p>\n        <p>Medford 4:08PM ({(legData1Arr[1].time / 3600).toFixed(2)}hrs)</p>\n        <p>Portland 10:52PM ({(legData1Arr[2].time / 3600).toFixed(2)}hrs)</p>\n      </div>\n    );\n  }\n  if (legData2Payload) {\n    const legData2Arr = legData2Payload.legs;\n    legData2 = (\n      <div className=\"optionContainer\">\n        <h2 className=\"optionHeading heavyTraffic\">\n          Alternate Route: (Total Trip Time: 25.09 hrs)\n        </h2>\n        <p className=\"strike\">Los Angeles 5:00AM</p>\n        <p>San Jose 10:24AM (5.40hrs</p>\n        <p>Carson City 4:42PM (5.48hrs)</p>\n        <p>Klamath Falls 11:35PM (8.35hrs)</p>\n        <p>Portland 4:56AM (5.86hrs)</p>\n      </div>\n    );\n  }\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    onSwitchFormChange(event.target.value);\n  };\n  return (\n    <div>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Switch Route Options</FormLabel>\n        <RadioGroup\n          aria-label=\"routes\"\n          name=\"routes\"\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value=\"4\"\n            control={<Radio />}\n            label={legData1}\n            className={classes.formControl}\n          />\n          <FormControlLabel\n            value=\"5\"\n            control={<Radio />}\n            label={legData2}\n            className={classes.formControl}\n          />\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport { useLocation } from 'react-router-dom';\n\nimport useMapImage from '../hooks/useMapImage'\nimport ChoiceForm from \"./ChoiceForm\";\nimport SwitchForm from \"./SwitchForm\";\n\nimport navIcons from '../images/Material_Icons.png'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    margin: theme.spacing(1),\n    height: \"90vh\",\n    overflowY: \"scroll\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function Map() {\n  const location = useLocation();\n  let startImg = 1\n  if (location.pathname === '/map_traffic') {\n    startImg = 4;\n  }\n  \n  const [urlParam, setUrlParam] = useState(startImg);\n  const [isShowingForm, setShowingForm] = useState(true);\n  const [isShowingSwitchForm, setShowingSwitchForm] = useState(true);\n  const [isShowingConfirm, setShowingConfirm] = useState(false);\n  const [isConfirmed, setConfirmed] = useState(false);\n  const [open, setOpen] = React.useState(false);\n\n  const classes = useStyles();\n  const mapImg = useMapImage(urlParam);\n  \n  let mapContainer;\n  if (mapImg) {\n    mapContainer = (\n        <img src={mapImg} alt=\"map\" className=\"mapImg\" />\n    );\n  } else {\n    mapContainer = \"Loading map...\";\n  }\n\n  const handleFormChange = (selection) => {\n    setUrlParam(selection)\n    setShowingConfirm(true);\n  }\n  const handleConfirm = (selection) => {\n    setShowingForm(false);\n    setShowingConfirm(false);\n    setShowingSwitchForm(false);\n    setConfirmed(true);\n    setOpen(true);\n  }\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const renderForm = () => (\n    isShowingForm && <ChoiceForm onFormChange={handleFormChange} />        \n  )\n  const renderSwitchForm = () => (\n    isShowingSwitchForm && <SwitchForm onSwitchFormChange={handleFormChange} />        \n  )\n  const optionLabels = [\"A\", \"B\", \"C\"];\n\n  return (\n    <Paper className={classes.root}>\n      <Link to=\"/map_traffic\">\n        <img src={navIcons} alt=\"icons\" className=\"navIcons\" />\n      </Link>\n      <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n        {isConfirmed ? \"Confirmed Route\" : \"Your Map\"}\n      </Typography>\n\n      <div className=\"mapMain\">\n        {mapContainer}\n        <div>\n          {location.pathname === \"/map\" ? renderForm() : renderSwitchForm()}\n          {isShowingConfirm && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={handleConfirm}\n            >\n              <span className=\"confirmBtn\">Confirm</span>\n              {location.pathname === \"/map\" ? (\n                `Option ${optionLabels[urlParam - 1]}`\n              ) : urlParam === \"4\" ? (\n                <span>Stay current route</span>\n              ) : (\n                <span>Switch to Other Route</span>\n              )}\n            </Button>\n          )}\n        </div>\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {location.pathname === \"/map\"\n            ? \"Your 9:15am reservation has been confirmed!\"\n            : \"Your reservation has been updated to the new location and time!\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <p>Payment will be processed with your digital wallet.</p>\n            <p>\n              Please be aware route changes may be suggested during heavy\n              traffic.\n            </p>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Got it!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n","import React from \"react\";\n\n// import ChoiceForm from \"./ChoiceForm\";\n\nexport default function Confirmation() {\n  return <div>Confirmation</div>;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n  // root: {\n  //   padding: theme.spacing(3, 2),\n  //   margin: theme.spacing(1),\n  //   height: \"90vh\",\n  //   overflowY: \"scroll\"\n  // },\n  // mapContainer: {\n  //   padding: theme.spacing(3, 2),\n  //   margin: theme.spacing(1),\n  //   // height: \"55vh\",\n  //   overflowY: \"scroll\"\n  // },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function Welcome() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"landing\">\n      {/*<img src={ChargeLogoLanding} alt=\"charge logo\"/>*/}\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n        <Link to=\"/dashboard\" className=\"landingBtn\">\n          Login Here\n        </Link>\n      </Button>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Dashboard from './components/Dashboard'\nimport Map from './components/Map'\nimport Confirmation from './components/Confirmation'\nimport Welcome from './components/Welcome'\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Welcome />\n          </Route>\n          <Route exact path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route exact path=\"/map\">\n            <Map />\n          </Route>\n          <Route exact path=\"/confirm\">\n            <Confirmation />\n          </Route>\n          <Route path=\"/map_traffic\">\n            <Map />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}","module.exports = __webpack_public_path__ + \"static/media/Material_Icons.74a1d701.png\";","module.exports = __webpack_public_path__ + \"static/media/route1.0d433227.png\";","module.exports = __webpack_public_path__ + \"static/media/route2.49761b33.png\";","module.exports = __webpack_public_path__ + \"static/media/route3.d188bd0e.png\";","module.exports = __webpack_public_path__ + \"static/media/heavy_traffic.36306532.png\";","module.exports = __webpack_public_path__ + \"static/media/alt_route.4a8da0ee.png\";"],"sourceRoot":""}